<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>mil.nga.giat</groupId>
	<artifactId>geowave-parent</artifactId>
	<version>0.8.1-SNAPSHOT</version>
	<name>geowave-parent</name>
	<packaging>pom</packaging>
	<description>Geowave adds spatio-temporal indexing to accumulo through geotools and geoserver</description>
	<url>https://github.com/ngageoint/geowave</url>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/ngageoint/geowave.git</url>
		<connection>scm:git:git@github.com:ngageoint/geowave.git</connection>
	</scm>


	<properties>
		<geotools.version>11.2</geotools.version>
		<geoserver.version>2.5.2</geoserver.version>
		<accumulo.version>1.5.1</accumulo.version>
		<hadoop.version>2.0.0-cdh4.7.0</hadoop.version>
		<hadoop.version.mr>2.0.0-mr1-cdh4.7.0</hadoop.version.mr>
		<avro.version>1.7.6</avro.version>
		<commons.cli.version>1.2</commons.cli.version>
		<geotools.scope>compile</geotools.scope>
		<accumulo.scope>compile</accumulo.scope>
		<hadoop.scope>compile</hadoop.scope>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<sonar.language>java</sonar.language>
		<!-- Feed Sonar with the JaCoCo integration tests coverage report (that 
			you have previously generated) -->
		<sonar.jacoco.itReportPath>${project.basedir}/../target/coverage-report/jacoco-integration.exec</sonar.jacoco.itReportPath>
		<sonar.jacoco.reportPath>${project.basedir}/../target/coverage-report/jacoco-unit.exec</sonar.jacoco.reportPath>
		<sonar.surefire.reportsPath>${project.build.directory}/surefire-reports</sonar.surefire.reportsPath>
		<sonar.failsafe.reportsPath>${project.build.directory}/failsafe-reports</sonar.failsafe.reportsPath>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>

		<!-- need to use a 64-bit JVM for tests -->
		<!-- Remove the MaxPermSize for Java8 -->
		<test.args>-Xms256m -Xmx6144m -XX:MaxPermSize=512m</test.args>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>javax.media</groupId>
				<artifactId>jai_codec</artifactId>
				<version>1.1.3</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.media</groupId>
				<artifactId>jai_core</artifactId>
				<version>1.1.3</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.media</groupId>
				<artifactId>jai_imageio</artifactId>
				<version>1.1</version>
				<scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.1.201405082137,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Compute unit test coverage for Sonar BEWARE: Sonar doesn't run the 
				verify phase, it has to be forced by setting -Dsonar.phase=verify -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.1.201405082137</version>
				<configuration>
					<includes>
						<include>mil/nga/giat/geowave**</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<propertyName>jacoco.surefire.argLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.itReportPath}</destFile>
							<propertyName>jacoco.failsafe.argLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<datafile>${sonar.jacoco.reportPath}</datafile>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${sonar.jacoco.itReportPath}</dataFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<argLine>${test.args} ${jacoco.surefire.argLine}</argLine>
					<excludes>
						<exclude>**IT.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>aggregate</id>
						<goals>
							<goal>aggregate</goal>
						</goals>
						<phase>site</phase>
						<configuration>
							<sourceFileIncludes>
								<include>**.java</include>
							</sourceFileIncludes>
							<windowtitle>GeoWave ${project.version}</windowtitle>
							<doctitle>GeoWave ${project.version}</doctitle>
							<groups>
								<group>
									<title>Analytics</title>
									<packages>mil.nga.giat.geowave.analytics*</packages>
								</group>
								<group>
									<title>GeoTools Storage</title>
									<packages>mil.nga.giat.geowave.gt*</packages>
								</group>
								<group>
									<title>Storage</title>
									<packages>mil.nga.giat.geowave.accumulo*:mil.nga.giat.geowave.store*</packages>
								</group>
								<group>
									<title>Indexing</title>
									<packages>mil.nga.giat.geowave.index*</packages>
								</group>
								<group>
									<title>Ingest Framework</title>
									<packages>mil.nga.giat.geowave.ingest*</packages>
								</group>
								<group>
									<title>Base Ingest Types</title>
									<packages>mil.nga.giat.geowave.types*</packages>
								</group>
							</groups>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<modules>
		<module>geowave-index</module>
		<module>geowave-store</module>
		<module>geowave-accumulo</module>
		<module>geowave-vector</module>
		<module>geowave-raster</module>
		<module>geowave-ingest</module>
		<module>geowave-types</module>
		<module>geowave-analytics</module>
		<module>geowave-deploy</module>
		<module>geowave-test</module>
	</modules>

	<repositories>
		<repository>
			<id>osgeo</id>
			<name>Open Source Geospatial Foundation Repository</name>
			<url>http://download.osgeo.org/webdav/geotools/</url>
		</repository>
		<repository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>boundlessgeo</id>
			<name>BoundlessGeo Maven Repository</name>
			<url>http://repo.boundlessgeo.com/main</url>
		</repository>
		<repository>
			<id>cloudera</id>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
			<id>HDPReleases</id>
			<name>HDP Releases</name>
			<url>http://repo.hortonworks.com/content/repositories/releases/</url>
			<layout>default</layout>
		</repository>
	</repositories>
	<profiles>
		<profile>
			<id>accumulo-container</id>
			<properties>
				<accumulo.scope>provided</accumulo.scope>
				<container.extension>-accumulo-container</container.extension>
			</properties>
		</profile>
		<profile>
			<id>geotools-container</id>
			<properties>
				<geotools.scope>provided</geotools.scope>
				<container.extension>-geotools-container</container.extension>
			</properties>
		</profile>
		<profile>
			<id>ingest-singlejar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
								<configuration>
									<filters>
										<filter>
											<artifact>junit:junit</artifact>
											<includes>
												<include>junit/framework/**</include>
												<include>org/junit/**</include>
											</includes>
											<excludes>
												<exclude>org/junit/experimental/**</exclude>
												<exclude>org/junit/runners/**</exclude>
											</excludes>
										</filter>
										<filter>
											<artifact>*:*</artifact>
											<excludes>
												<exclude>META-INF/*.SF</exclude>
												<exclude>META-INF/*.DSA</exclude>
												<exclude>META-INF/*.RSA</exclude>
											</excludes>
										</filter>
									</filters>
									<transformers>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
											<manifestEntries>
												<Main-Class>mil.nga.giat.geowave.ingest.IngestMain</Main-Class>
											</manifestEntries>
										</transformer>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
									</transformers>
									<createDependencyReducedPom>false</createDependencyReducedPom>
									<minimizeJar>false</minimizeJar>
									<finalName>${project.build.finalName}-ingest-tool</finalName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
