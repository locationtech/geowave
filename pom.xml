<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>mil.nga.giat</groupId>
	<artifactId>geowave-parent</artifactId>
	<version>0.9.6-SNAPSHOT</version>
	<name>GeoWave Parent POM</name>
	<packaging>pom</packaging>
	<description>Geowave adds spatio-temporal indexing to accumulo through geotools and geoserver</description>
	<url>https://github.com/locationtech/geowave</url>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<distributionManagement>
		<repository>
			<id>geowave-maven-releases</id>
			<name>GeoWave AWS Release Repository</name>
			<url>s3://geowave-maven/release</url>
		</repository>
		<snapshotRepository>
			<id>geowave-maven-snapshots</id>
			<name>GeoWave AWS Snapshot Repository</name>
			<url>s3://geowave-maven/snapshot</url>
		</snapshotRepository>
	</distributionManagement>
	<scm>
		<url>https://github.com/locationtech/geowave.git</url>
		<connection>scm:git:https://github.com/locationtech/geowave.git</connection>
		<tag>HEAD</tag>
	</scm>
	<properties>
		<spark.version>2.2.0</spark.version>
		<geotools.version>16.0</geotools.version>
		<hadoop.env.classifier>hadoop2</hadoop.env.classifier>
		<geoserver.version>2.10.0</geoserver.version>
		<accumulo.version>1.8.1</accumulo.version>
		<accumulo.api>1.8</accumulo.api>
		<skipITs>true</skipITs>
		<bigtable.version>0.9.4</bigtable.version>
		<vfs2.version>2.1</vfs2.version>
		<hbase.version>1.3.0</hbase.version>
		<hadoop.version>2.7.3</hadoop.version>
		<avro.version>1.7.6</avro.version>
		<httpclient.version>4.5.2</httpclient.version>
		<httpcore.version>4.4.4</httpcore.version>
		<geotools.scope>compile</geotools.scope>
		<accumulo.scope>compile</accumulo.scope>
		<hbase.scope>compile</hbase.scope>
		<hadoop.scope>compile</hadoop.scope>
		<zookeeper.version>3.4.6</zookeeper.version>
		<jersey.version>2.23.1</jersey.version>
		<kafka.artifact>kafka_2.11</kafka.artifact>
		<kafka.version>0.8.2.1</kafka.version>
		<snappy.version>1.0.5</snappy.version>
		<jcommander.version>1.48</jcommander.version>
		<jackson.version>1.9.13</jackson.version>
		<fasterxml.jackson.version>2.6.5</fasterxml.jackson.version>
		<spring-security.version>4.0.4.RELEASE</spring-security.version>
		<slf4j.version>1.7.21</slf4j.version>
		<junit.version>4.11</junit.version>
		<gdal.dir>${project.build.directory}/temp/gdal</gdal.dir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<sonar.language>java</sonar.language>
		<container.extension />
		<!-- Feed Sonar with the JaCoCo integration tests coverage report (that 
			you have previously generated) -->
		<jacoco.it.reportPath>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.reportPath>
		<jacoco.ut.reportPath>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.reportPath>
		<it.reportPath>${project.reporting.outputDirectory}/jacoco-it</it.reportPath>
		<ut.reportPath>${project.reporting.outputDirectory}/jacoco-ut</ut.reportPath>
		<sonar.jacoco.reportPath>${jacoco.ut.reportPath}</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${jacoco.it.reportPath}</sonar.jacoco.itReportPath>
		<surefire.report.path>${basedir}/target/surefire-reports</surefire.report.path>
		<sonar.junit.reportsPath>${surefire.report.path}</sonar.junit.reportsPath>
		<jacoco.version>0.7.4.201502262128</jacoco.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<test.args>-XX:CompressedClassSpaceSize=512m -XX:+UseSerialGC -Xms1g -Xmx2g -XX:MaxMetaspaceSize=512m</test.args>
		<findbugs.version>3.0.1</findbugs.version>
		<findbugs.omitVisitors>MutableStaticFields,FindReturnRef</findbugs.omitVisitors>
		<findbugs.effort>Max</findbugs.effort>
		<findbugs.threshold>Medium</findbugs.threshold>
		<findbugs.failOnError>true</findbugs.failOnError>
		<findbugs.maxHeap>1024</findbugs.maxHeap>
		<findbugs.filterFile>findbugs/findbugs-exclude.xml</findbugs.filterFile>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper.version}</version>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>2.11.0</version>
			</dependency>
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
				<version>1.4.01</version>
			</dependency>
			<dependency>
				<groupId>javax.media</groupId>
				<artifactId>jai_codec</artifactId>
				<version>1.1.3</version>
				<scope>${geotools.scope}</scope>
			</dependency>
			<dependency>
				<groupId>javax.media</groupId>
				<artifactId>jai_core</artifactId>
				<version>1.1.3</version>
				<scope>${geotools.scope}</scope>
			</dependency>
			<dependency>
				<groupId>javax.media</groupId>
				<artifactId>jai_imageio</artifactId>
				<version>1.1</version>
			</dependency>
			<dependency>
				<groupId>com.vividsolutions</groupId>
				<artifactId>jts-core</artifactId>
				<version>1.14.0</version>
			</dependency>
			<dependency>
				<groupId>com.vividsolutions</groupId>
				<artifactId>jts-example</artifactId>
				<version>1.14.0</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>2.4.2</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<classifier>jdk15</classifier>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>14.0-rc1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math</artifactId>
				<version>2.1</version>
			</dependency>
			<dependency>
				<groupId>org.xerial.snappy</groupId>
				<artifactId>snappy-java</artifactId>
				<version>1.0.5</version>
			</dependency>
			<dependency>
				<groupId>org.apache.accumulo</groupId>
				<artifactId>accumulo-core</artifactId>
				<version>${accumulo.version}</version>
				<scope>${accumulo.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.accumulo</groupId>
				<artifactId>accumulo-server</artifactId>
				<version>${accumulo.version}</version>
				<scope>${accumulo.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.accumulo</groupId>
				<artifactId>accumulo-monitor</artifactId>
				<version>${accumulo.version}</version>
				<scope>${accumulo.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.accumulo</groupId>
				<artifactId>accumulo-minicluster</artifactId>
				<version>${accumulo.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.cloud.bigtable</groupId>
				<artifactId>bigtable-hbase-1.2</artifactId>
				<version>${bigtable.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-testing-util</artifactId>
				<version>${hbase.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jdk.tools</artifactId>
						<groupId>jdk.tools</groupId>
					</exclusion>
				</exclusions>
				<scope>${hbase.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-client</artifactId>
				<version>${hbase.version}</version>
				<scope>${hbase.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-server</artifactId>
				<version>${hbase.version}</version>
				<scope>${hbase.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-client</artifactId>
				<version>${hadoop.version}</version>
				<scope>${hadoop.scope}</scope>
			</dependency>
			<dependency>
				<groupId>com.beust</groupId>
				<artifactId>jcommander</artifactId>
				<version>${jcommander.version}</version>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-opengis</artifactId>
				<version>${geotools.version}</version>
				<scope>${geotools.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-shapefile</artifactId>
				<version>${geotools.version}</version>
				<scope>${geotools.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-main</artifactId>
				<version>${geotools.version}</version>
				<scope>${geotools.scope}</scope>
				<exclusions>
					<exclusion>
						<groupId>com.vividsolutions</groupId>
						<artifactId>jts</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-data</artifactId>
				<version>${geotools.version}</version>
				<scope>${geotools.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-wps</artifactId>
				<version>${geotools.version}</version>
				<scope>${geotools.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>2.3.0</version>
			</dependency>
			<dependency>
				<groupId>org.geoserver</groupId>
				<artifactId>gs-wms</artifactId>
				<version>${geoserver.version}</version>
				<scope>${geotools.scope}</scope>
				<exclusions>
					<exclusion>
						<groupId>com.vividsolutions</groupId>
						<artifactId>jts</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.geoserver</groupId>
				<artifactId>gs-main</artifactId>
				<version>${geoserver.version}</version>
				<scope>${geotools.scope}</scope>
				<exclusions>
					<exclusion>
						<groupId>com.vividsolutions</groupId>
						<artifactId>jts</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.geoserver</groupId>
				<artifactId>gs-ows</artifactId>
				<version>${geoserver.version}</version>
				<scope>${geotools.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.geoserver</groupId>
				<artifactId>gs-platform</artifactId>
				<version>${geoserver.version}</version>
				<scope>${geotools.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.geoserver</groupId>
				<artifactId>gs-wfs</artifactId>
				<version>${geoserver.version}</version>
				<scope>${geotools.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-render</artifactId>
				<version>${geotools.version}</version>
				<scope>${geotools.scope}</scope>
				<exclusions>
					<exclusion>
						<groupId>com.vividsolutions</groupId>
						<artifactId>jts</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-epsg-wkt</artifactId>
				<version>${geotools.version}</version>
				<scope>${geotools.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>${avro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-mapred</artifactId>
				<version>${avro.version}</version>
				<classifier>hadoop2</classifier>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpcore.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>annotations</artifactId>
				<version>${findbugs.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-multipart</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-json-jackson</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.ext</groupId>
				<artifactId>jersey-proxy-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-vfs2</artifactId>
				<version>${vfs2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${fasterxml.jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring-security.version}</version>
				<scope>${geotools.scope}</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<!-- Dependencies used across ALL projects -->
	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<extensions>
			<extension>
				<groupId>org.springframework.build</groupId>
				<artifactId>aws-maven</artifactId>
				<version>5.0.0.RELEASE</version>
			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[${jacoco.version},)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.sonatype.plugins
										</groupId>
										<artifactId>
											munge-maven-plugin
										</artifactId>
										<versionRange>
											[1.0,)
										</versionRange>
										<goals>
											<goal>munge</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.avro</groupId>
										<artifactId>avro-maven-plugin</artifactId>
										<versionRange>[1.7.6,)</versionRange>
										<goals>
											<goal>schema</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											net.revelc.code
										</groupId>
										<artifactId>
											formatter-maven-plugin
										</artifactId>
										<versionRange>
											[0.5.2,)
										</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findbugs.version}</version>
					<configuration>
						<failOnError>${findbugs.failOnError}</failOnError>
						<threshold>${findbugs.threshold}</threshold>
						<effort>${findbugs.effort}</effort>
						<excludeFilterFile>${findbugs.filterFile}</excludeFilterFile>
						<maxHeap>${findbugs.maxHeap}</maxHeap>
						<jvmArgs>${test.args}</jvmArgs>
						<omitVisitors>${findbugs.omitVisitors}</omitVisitors>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>mil.nga.giat</groupId>
							<artifactId>geowave-dev-resources</artifactId>
							<version>1.2</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.avro</groupId>
					<artifactId>avro-maven-plugin</artifactId>
					<version>${avro.version}</version>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>schema</goal>
							</goals>
							<configuration>
								<sourceDirectory>${project.basedir}/src/main/avro/</sourceDirectory>
								<outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
								<stringType>String</stringType>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.github.os72</groupId>
					<artifactId>protoc-jar-maven-plugin</artifactId>
					<version>3.1.0.1</version>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<protocVersion>2.5.0</protocVersion>
								<outputDirectory>src/main/java</outputDirectory>
								<inputDirectories>
									<include>src/main/protobuf</include>
								</inputDirectories>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>net.revelc.code</groupId>
					<artifactId>formatter-maven-plugin</artifactId>
					<version>0.5.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>1.4</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scripts>
						<script><![CDATA[
			                import org.apache.maven.plugin.MojoExecutionException
			                String accumuloVersion = System.getProperties().getProperty("accumulo.version")
							String accumuloAPI = System.getProperties().getProperty("accumulo.api")
							if (accumuloVersion != null){
			                	String apiVersion = accumuloVersion.substring(0,3)
			                	if (accumuloAPI == null) {
			                		throw new MojoExecutionException("Error: When defining -Daccumulo.version=" + accumuloVersion + ", you must also define -Daccumulo.api=" + apiVersion)
			                	} else if (!accumuloAPI.equals(apiVersion)) {
			                		throw new MojoExecutionException("Error: Setting -Daccumulo.version=" + accumuloVersion + ", is not the same API version as set in -Daccumulo.api=" + accumuloAPI + "; value should be: " + apiVersion)
			                	}
			                } else if (accumuloAPI != null) {
			                		throw new MojoExecutionException("Error: When defining -Daccumulo.api=" + accumuloAPI + ", you must also define -Daccumulo.version equal to a version compatible with that api")
			                }
                    ]]></script>
					</scripts>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<version>1.5.0</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<includes>
								<include>mil/nga/giat/geowave/**</include>
							</includes>
							<destFile>${jacoco.ut.reportPath}</destFile>
							<propertyName>jacoco.surefire.argline</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.ut.reportPath}</dataFile>
							<outputDirectory>${ut.reportPath}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<includes>
								<include>mil/nga/giat/geowave/**</include>
							</includes>
							<destFile>${jacoco.it.reportPath}</destFile>
							<propertyName>jacoco.failsafe.argline</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.it.reportPath}</dataFile>
							<outputDirectory>${it.reportPath}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<argLine>${test.args} ${jacoco.surefire.argline}</argLine>
					<excludes>
						<exclude>**IT.java</exclude>
						<exclude>**/*ITSuite.java</exclude>
					</excludes>
					<environmentVariables>
						<LD_LIBRARY_PATH>${gdal.dir}</LD_LIBRARY_PATH>
						<PATH>${gdal.dir}${path.separator}${env.PATH}</PATH>
						<GDAL_DIR>${gdal.dir}</GDAL_DIR>
					</environmentVariables>
					<outputDirectory>${surefire.report.path}</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<notimestamp>true</notimestamp>
					<additionalparam>${javadoc.opts}</additionalparam>
				</configuration>
				<executions>
					<execution>
						<id>aggregate</id>
						<goals>
							<goal>aggregate</goal>
						</goals>
						<phase>site</phase>
						<configuration>
							<sourceFileIncludes>
								<include>**.java</include>
							</sourceFileIncludes>
							<quiet>true</quiet>
							<windowtitle>GeoWave ${project.version}</windowtitle>
							<doctitle>GeoWave ${project.version}</doctitle>
							<groups>
								<group>
									<title>Analytics</title>
									<packages>mil.nga.giat.geowave.analytic*</packages>
								</group>
								<group>
									<title>Data Adapter for Vector Data</title>
									<packages>mil.nga.giat.geowave.adapter.vector*</packages>
								</group>
								<group>
									<title>Data Adapter for Raster Data</title>
									<packages>mil.nga.giat.geowave.adapter.raster*</packages>
								</group>
								<group>
									<title>Storage API</title>
									<packages>mil.nga.giat.geowave.core.store*</packages>
								</group>
								<group>
									<title>Spatial-Temporal Core</title>
									<packages>mil.nga.giat.geowave.core.geotime*</packages>
								</group>
								<group>
									<title>Accumulo Data Store</title>
									<packages>mil.nga.giat.geowave.datastore.accumulo*</packages>
								</group>
								<group>
									<title>HBase Data Store</title>
									<packages>mil.nga.giat.geowave.datastore.hbase*</packages>
								</group>
								<group>
									<title>Indexing</title>
									<packages>mil.nga.giat.geowave.core.index*</packages>
								</group>
								<group>
									<title>Command-Line Tools</title>
									<packages>mil.nga.giat.geowave.core.cli*</packages>
								</group>
								<group>
									<title>Ingest Framework</title>
									<packages>mil.nga.giat.geowave.core.ingest*</packages>
								</group>
								<group>
									<title>Base Ingest Formats</title>
									<packages>mil.nga.giat.geowave.format*</packages>
								</group>
								<group>
									<title>Services</title>
									<packages>mil.nga.giat.geowave.service*</packages>
								</group>
								<group>
									<title>Examples</title>
									<packages>mil.nga.giat.geowave.example*</packages>
								</group>
							</groups>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.revelc.code</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<configuration>
					<configFile>eclipse/eclipse-formatter.xml</configFile>
					<lineEnding>KEEP</lineEnding>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>mil.nga.giat</groupId>
						<artifactId>geowave-dev-resources</artifactId>
						<version>1.2</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- for incrementing version numbers and tagging repositories To Use: 
				0. Ensure all files checked into master (clean environment). Make sure you 
				have access to both mvn and git on your command line, and you are in a terminal 
				that has push access (credentials are setup and correct). Make sure you have 
				the branch active in git you want to tag. If something goes wrong pushing, 
				you will most likely have outstanding commits in your local repo you will 
				have to revert/remove. 1. mvn release:prepare -DdryRun=true -Darguments="-DskipTests 
				-Dfindbugs.skip" 2. Inspect and ensure the correct pom.xml files will be 
				modified 3. mvn release:prepare -Darguments="-DskipTests -Dfindbugs.skip" 
				4. mvn release:clean -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<modules>
		<module>analytics</module>
		<module>core</module>
		<module>deploy</module>
		<module>docs</module>
		<module>examples/java-api</module>
		<module>extensions</module>
		<module>services</module>
		<module>test</module>
	</modules>
	<repositories>
		<repository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>boundlessgeo</id>
			<name>BoundlessGeo Maven Repository</name>
			<url>http://repo.boundlessgeo.com/main</url>
		</repository>
		<repository>
			<id>osgeo</id>
			<name>Open Source Geospatial Foundation Repository</name>
			<url>http://download.osgeo.org/webdav/geotools/</url>
		</repository>
		<repository>
			<id>geosolutions</id>
			<name>GeoSolutions Repository</name>
			<url>http://maven.geo-solutions.it</url>
		</repository>
		<repository>
			<id>geowave-maven-snapshots</id>
			<name>GeoWave AWS Snapshots Repository</name>
			<url>http://geowave-maven.s3-website-us-east-1.amazonaws.com/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>geowave-maven-releases</id>
			<name>GeoWave AWS Release Repository</name>
			<url>http://geowave-maven.s3-website-us-east-1.amazonaws.com/release</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>geowave-maven-releases</id>
			<name>GeoWave AWS Release Repository</name>
			<url>http://geowave-maven.s3-website-us-east-1.amazonaws.com/release</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<configuration>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<xmlOutput>true</xmlOutput>
					<xmlOutputDirectory>${project.basedir}/target/site</xmlOutputDirectory>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<!-- skip all code quality tools if specified -->
		<profile>
			<id>skip-code-quality</id>
			<activation>
				<property>
					<name>skip-quality</name>
				</property>
			</activation>
			<properties>
				<skipITs>true</skipITs>
				<skipTests>true</skipTests>
				<formatter.skip>true</formatter.skip>
				<findbugs.skip>true</findbugs.skip>
			</properties>
		</profile>
		<profile>
			<id>cloudera</id>
			<properties>
				<accumulo.version>1.7.2-cdh5.5.0</accumulo.version>
				<hbase.version>1.2.0-cdh5.9.0</hbase.version>
				<hadoop.version>2.6.0-cdh5.9.0</hadoop.version>
				<spark.version>2.1.0.cloudera2</spark.version>
				<accumulo.api>1.7</accumulo.api>
			</properties>
			<repositories>
				<repository>
					<id>cloudera</id>
					<url>http://repository.cloudera.com/cloudera/cloudera-repos/</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</repository>
				<repository>
					<releases>
						<enabled>true</enabled>
						<updatePolicy>always</updatePolicy>
						<checksumPolicy>warn</checksumPolicy>
					</releases>
					<snapshots>
						<enabled>false</enabled>
						<updatePolicy>never</updatePolicy>
						<checksumPolicy>fail</checksumPolicy>
					</snapshots>
					<id>HDPReleases</id>
					<name>HDP Releases</name>
					<url>http://repo.hortonworks.com/content/repositories/releases/</url>
					<layout>default</layout>
				</repository>
			</repositories>
		</profile>
		<profile>
			<id>hortonworks</id>
			<properties>
				<accumulo.version>1.7.0.2.6.0.3-8</accumulo.version>
				<hbase.version>1.1.2.2.6.0.3-8</hbase.version>
				<hadoop.version>2.7.3.2.6.0.3-8</hadoop.version>
				<spark.version>2.1.0.2.6.0.3-8</spark.version>
				<accumulo.api>1.7</accumulo.api>
			</properties>
			<repositories>
				<repository>
					<releases>
						<enabled>true</enabled>
						<updatePolicy>always</updatePolicy>
						<checksumPolicy>warn</checksumPolicy>
					</releases>
					<snapshots>
						<enabled>false</enabled>
						<updatePolicy>never</updatePolicy>
						<checksumPolicy>fail</checksumPolicy>
					</snapshots>
					<id>HDPReleases</id>
					<name>HDP Releases</name>
					<url>http://repo.hortonworks.com/content/repositories/releases/</url>
					<layout>default</layout>
				</repository>
				<repository>
					<releases>
						<enabled>true</enabled>
						<updatePolicy>always</updatePolicy>
						<checksumPolicy>warn</checksumPolicy>
					</releases>
					<snapshots>
						<enabled>false</enabled>
						<updatePolicy>never</updatePolicy>
						<checksumPolicy>fail</checksumPolicy>
					</snapshots>
					<id>HDPJettyHadoop</id>
					<name>HDP Jetty Hadoop</name>
					<url>http://repo.hortonworks.com/content/repositories/jetty-hadoop/</url>
					<layout>default</layout>
				</repository>
			</repositories>
		</profile>
		<profile>
			<id>compatibility</id>
			<properties>
				<accumulo.version>1.7.2</accumulo.version>
				<accumulo.api>1.7</accumulo.api>
				<hadoop.version>2.6.4</hadoop.version>
				<geotools.version>15.2</geotools.version>
				<geoserver.version>2.9.2</geoserver.version>
			</properties>
		</profile>
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<javadoc.opts>-Xdoclint:none</javadoc.opts>
			</properties>
		</profile>
	</profiles>
</project>
