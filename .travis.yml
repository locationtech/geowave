dist: xenial
language: java
jdk:
  # jdk8 is not available on xenial
  # - openjdk8
  # - oraclejdk8
env:
  matrix:
    # The first line of the matrix just builds docs (only on master) and runs unit tests
    # The rest skip the unit tests and run ITs only
    - NAME='Publish Maven Artifacts and Docs' MAVEN_PROFILES='""' BUILD_AND_PUBLISH=true   IT_ONLY=false
    - NAME='Unit Tests on Latest ASF Versions' MAVEN_PROFILES='""' BUILD_AND_PUBLISH=false   IT_ONLY=false
    - NAME='Python Bindings Tests' MAVEN_PROFILES='""' BUILD_AND_PUBLISH=false IT_ONLY=false PYTHON_BUILD=true
    - NAME='Redis IT on Latest ASF Versions' MAVEN_PROFILES='redis-it' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='RocksDB IT on Latest ASF Versions' MAVEN_PROFILES='rocksdb-it' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='Accumulo Client IT on Latest ASF Versions' MAVEN_PROFILES='accumulo-it-client' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='Accumulo Server IT on Latest ASF Versions' MAVEN_PROFILES='accumulo-it-server' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='HBase Client IT on Latest ASF Versions' MAVEN_PROFILES='hbase-it-client' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='HBase Server IT on Latest ASF Versions' MAVEN_PROFILES='hbase-it-server' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='Cassandra IT on Latest ASF Versions' MAVEN_PROFILES='cassandra-it' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='DynamoDB IT on Latest ASF Versions' MAVEN_PROFILES='dynamodb-it' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='Bigtable IT on Latest ASF Versions' MAVEN_PROFILES='bigtable-it' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='Accumulo Server IT on Older ASF and GeoTools Versions' MAVEN_PROFILES='accumulo-it-server,compatibility' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='HBase Client IT on Older ASF and GeoTools Versions' MAVEN_PROFILES='hbase-it-client,compatibility' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='Accumulo Server IT on Latest HDP Versions' MAVEN_PROFILES='accumulo-it-server,hortonworks' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='RocksDB IT with Secondary Indexing'  MAVEN_PROFILES='rocksdb-it,secondary-index-it' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - NAME='Kudu IT on Latest ASF Versions' MAVEN_PROFILES='kudu-it' BUILD_AND_PUBLISH=false  IT_ONLY=true
  global:
    - secure: C3gdJmFavZxvsRVqCLpRUAaisNV3MhWbSYf4Wjs2SBLC/AIEwN0vDWHOuYiUExuXR1kApBVdNffuCX7bt/5siewHgmiVUGyY1xytxDdv+PAKZihlfYZRGattyg3XUbEFwyjr7c74639Y1w45NPUoBMUT4SKHZkfqD+FDU47OHIM=

# CDH tests only run in the precise environment. It times out on xenial
matrix:
  include:
    - dist: precise
      jdk: oraclejdk8
      env: NAME='HBase Server IT on Latest CDH Versions'  MAVEN_PROFILES='hbase-it-server,cloudera' BUILD_AND_PUBLISH=false  IT_ONLY=true
    - dist: precise
      jdk: oraclejdk8
      env: NAME='Accumulo Server IT on Latest CDH Versions' MAVEN_PROFILES='accumulo-it-server,cloudera' BUILD_AND_PUBLISH=false  IT_ONLY=true

cache:
  directories:
  - $HOME/.m2
  - $HOME/.downloads
  - test/landsat8
  - test/sentinel2
  - test/target/temp/gdal
install:
  - .utility/build-dev-resources.sh
  # This will only run on master w/ BUILD_AND_PUBLISH=true
  - travis_wait 50 .utility/build.sh
script:
  # This script uses the IT_ONLY flag to determine whether to run unit tests using verify, or ITs only using failsafe
  - .utility/run-tests.sh
before_install:
  # Force an ntp time sync which is required for Kudu to start (ntp is already installed on travis)
  - sudo service ntp stop && sudo ntpd -gq && sudo service ntp start
  # Remove travis CI jdk 11 from path (automatically included in xenial)
  - |
    lsb_release -a | grep "xenial" \
    && export PATH=${PATH/:\/usr\/local\/lib\/jvm\/openjdk11\/bin/} \
    && sudo apt-get install openjdk-8-jdk \
    && sudo update-java-alternatives -s java-1.8.0-openjdk-amd64 \
    && export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 \
    || true
  # Check that jdk 8 is installed
  - java -version
  # This must match the dev-resources version from the parent pom:
  - export DEV_RESOURCES_VERSION=1.5
  - export MAVEN_OPTS="-XX:CompressedClassSpaceSize=256m -XX:+UseSerialGC -Xmx2g -XX:MaxMetaspaceSize=512m -Dorg.slf4j.simpleLogger.defaultLogLevel=warn"
  - chmod +x .utility/build-dev-resources.sh
  - chmod +x .utility/run-tests.sh
  - chmod +x .utility/build.sh
  - chmod +x .utility/publish.sh
  - chmod +x .utility/coveralls.sh
  - chmod +x .utility/maven-coveralls-hack.sh
  - .utility/maven-coveralls-hack.sh
after_success:
  - .utility/publish.sh
  - .utility/coveralls.sh
notifications:
    urls:
      - https://webhooks.gitter.im/e/1dd2fadd07a92dcdc3d8
addons:
  apt:
    update: true
    packages:
      - lzop
      - pandoc
      - python-software-properties
      - debconf-utils
  coverity_scan:
    project:
      name: locationtech/geowave
      description: Build submitted via Travis CI
    notification_email: GeoWave@nga.mil
    build_command_prepend: mvn clean
    build_command: mvn clean compile -Dfindbugs.skip -DskipTests=true -Dformatter.skip -P ${MAVEN_PROFILES}
    branch_pattern: coverity_scan
