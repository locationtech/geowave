#!/bin/bash

GEOWAVE_VER=${1:-$GEOWAVE_VERSION_TOKEN}

THIS_SCRIPT="$(realpath "${BASH_SOURCE[0]}")"
RUN_FLAG="${THIS_SCRIPT}.run"
# Output of this script will be in /tmp/bootstrap-zeppelin.log
if [ ! -f "$RUN_FLAG" ]; then
        touch "$RUN_FLAG"
        TIMEOUT= is_master && TIMEOUT=3 || TIMEOUT=4
        echo "bash -x $(realpath "${BASH_SOURCE[0]}") > /tmp/bootstrap-zeppelin.log" | at now + $TIMEOUT min
        exit 0 # Bail and let EMR finish initializing
fi

GEOWAVE_INSTALL=/usr/local/geowave/tools/geowave-tools-${GEOWAVE_VER}-apache.jar
ZEPPELIN_ENV=/usr/lib/zeppelin/conf/zeppelin-env.sh

#Add geowave jar to submit --jars option
jar_arg='--jars '${GEOWAVE_INSTALL}

#Modifying default spark allocation properties to use max memory resources available with HBase
YARN_SCHED_MAX=`xmllint --xpath 'string(//property[name="yarn.scheduler.maximum-allocation-mb"]/value)' /etc/hadoop/conf/yarn-site.xml`
YARN_CONT_MAX=`xmllint --xpath 'string(//property[name="yarn.nodemanager.resource.memory-mb"]/value)' /etc/hadoop/conf/yarn-site.xml`
echo "Yarn Scheduler Max Memory = ${YARN_SCHED_MAX}(MB)"
echo "Yarn Container Max Memory = ${YARN_CONT_MAX}(MB)"

MAX_MOD=0.9
CONT_MOD=0.8
#Use bc calculator to get new max and container memory and truncate floating result
MOD_SCHED_MAX=$(echo "($YARN_SCHED_MAX*$MAX_MOD) / 1" | bc)
MOD_CONT_MAX=$(echo "($YARN_CONT_MAX*$CONT_MOD) / 1" | bc)

echo "Modified Yarn Scheduler Max Memory = ${MOD_SCHED_MAX}(MB)"
echo "Modified Yarn Container Max Memory = ${MOD_CONT_MAX}(MB)"

DRIVER_MEM="--driver-memory ${MOD_SCHED_MAX}M "
EXECUTOR_MEM="--executor-memory ${MOD_CONT_MAX}M "

submit_string=$DRIVER_MEM$EXECUTOR_MEM$jar_arg

echo "New Spark Submit Options: ${submit_string}"

# add spark submit options to zeppelin env
replaceEscaped=$(sed 's/[&/\]/\\&/g' <<<"$submit_string")
sudo sed -i -e s/'$SPARK_SUBMIT_OPTIONS'/"$replaceEscaped"/g $ZEPPELIN_ENV

# This was added because Upstart doesn't capture user environment variables before loading zeppelin
# Cant use the printf command to insert into priviledged file instead use tee command to append
# /dev/null prevents command from writing output to console
printf "\nexport HOSTNAME=$HOSTNAME" | sudo tee --append $ZEPPELIN_ENV > /dev/null
echo "Zeppelin configured"


