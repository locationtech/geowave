#!/usr/bin/python

import os, re

class DeleteOldFiles():
    def __init__(self):
        self.dev_path = os.path.join(os.sep, 'var','www','html','repos','snapshots','geowave','dev')
        self.dev_jar_path = os.path.join(os.sep, 'var','www','html','repos','snapshots','geowave','dev-jars')
        self.num_files_to_keep = 50

    @staticmethod
    def find_date(fname):
        reg = re.search('(?P<date>\d{12})',fname)
        return int(reg.group('date'))
    
    def delete_old_files(self, files_list):
        if len(files_list) > self.num_files_to_keep:
            for entry in files_list[self.num_files_to_keep:]:
                os.remove(entry)
    
    def clean_dirs(self, path):
        files_list = []
        for f in os.listdir(path):
            if f.startswith('geowave'):
                files_list.append(os.path.join(path,f))
        
        sorted_files_list = sorted(files_list, key=self.find_date, reverse=True)
        self.delete_old_files(sorted_files_list)

    def run(self):
        paths = [self.dev_path, self.dev_jar_path]
        for path in paths:
            subdirs_list = [name for name in os.listdir(path) if os.path.isdir(os.path.join(path, name))]
            for subdir in subdirs_list: 
                self.clean_dirs(os.path.join(path,subdir))
        print('Directories cleaned')

if __name__ == "__main__":
    cleanup = DeleteOldFiles()
    cleanup.run()
