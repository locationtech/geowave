//:= geowave-ingest-localToKafka(1)
:doctype: manpage

[[ingest-localToKafka-name]]
==== NAME

geowave-ingest-localToKafka - Stage supported files in local file system to a Kafka topic

[[ingest-localToKafka-synopsis]]
==== SYNOPSIS

  geowave ingest localToKafka [options] <file or directory>

[[ingest-localToKafka-description]]
==== DESCRIPTION

This command stages supported files in the local file system to a Kafka topic.

[[ingest-localToKafka-options]]
==== OPTIONS

*$$*$$ --kafkaprops* _<file>_::
  Properties file containing Kafka properties

*--bootstrapServers* _<brokers>_::
  This is for bootstrapping and the producer will only use it for getting metadata (topics, partitions and replicas). The socket connections for sending the actual data will be established based on the broker information returned in the metadata. The format is `host1:port1,host2:port2`, and the list can be a subset of brokers or a VIP pointing to a subset of brokers.

*--retryBackoffMs* _<time>_::
  The amount of time to wait before attempting to retry a failed produce request to a given topic partition. This avoids repeated sending-and-failing in a tight loop.

*-x, --extension* _<extensions>_::
  Individual or comma-delimited set of file extensions to accept.

*-f, --formats* _<formats>_::
  Explicitly set the ingest formats by name (or multiple comma-delimited formats).  If not set, all available ingest formats will be used.

When the `avro` format is used, additional options are:

*--avro.avro*::
  If specified, indicates that the operation should use Avro feature serialization.

*--avro.cql* _<filter>_::
  An optional CQL filter. If specified, only data matching the filter will be ingested.

*--avro.typename* _<types>_::
  A comma-delimitted set of type names to ingest, feature types matching the specified type names will be ingested.  By default, all type names will be ingested.

*--avro.maxVertices* _<count>_::
  Maximum number of vertices to allow for the feature. Features with over this vertice count will be discarded.

*--avro.minSimpVertices* _<count>_::
  Minimum vertex count to qualify for geometry simplification.

*--avro.tolerance* _<tolerance>_::
  Maximum error tolerance in geometry simplification. Should range from 0.0 to 1.0 (i.e. .1 = 10%).  Default is 0.02.

When the `gdelt` format is used, additional options are:

*--gdelt.avro*::
  A flag to indicate whether Avro feature serialization should be used.

*--gdelt.cql* _<filter>_::
  A CQL filter, only data matching this filter will be ingested.

*--gdelt.extended*::
  A flag to indicate whether extended data format should be used.

*--gdelt.typename* _<types>_::
  A comma-delimitted set of type names to ingest, feature types matching the specified type names will be ingested.  By default all types will be ingested.

*--gdelt.maxVertices* _<count>_::
  Maximum number of vertices to allow for the feature. Features with over this vertice count will be discarded.

*--gdelt.minSimpVertices* _<count>_::
  Minimum vertex count to qualify for geometry simplification.

*--gdelt.tolerance* _<tolerance>_::
  Maximum error tolerance in geometry simplification. Should range from 0.0 to 1.0 (i.e. .1 = 10%).  Default is 0.02.

When the `geolife` format is used, additional options are:

*--geolife.avro*::
  A flag to indicate whether Avro feature serialization should be used.

*--geolife.cql* _<filter>_::
  A CQL filter, only data matching this filter will be ingested.

*--geolife.typename* _<types>_::
  A comma-delimitted set of type names to ingest, feature types matching the specified typen ames will be ingested.  By default all types will be ingested.

*--geolife.maxVertices* _<count>_::
  Maximum number of vertices to allow for the feature. Features with over this vertice count will be discarded.

*--geolife.minSimpVertices* _<count>_::
  Minimum vertex count to qualify for geometry simplification.

*--geolife.tolerance* _<tolerance>_::
  Maximum error tolerance in geometry simplification. Should range from 0.0 to 1.0 (i.e. .1 = 10%).  Default is 0.02.

When the `geotools-raster` format is used, additional options are:

*--geotools-raster.coverage* _<name>_::
  Coverage name for the raster.  Default is the name of the file.

*--geotools-raster.crs* _<crs>_::
  A CRS override for the provided raster file.

*--geotools-raster.histogram*::
  If specified, build a histogram of samples per band on ingest for performing band equalization.

*--geotools-raster.mergeStrategy* _<strategy>_::
  The tile merge strategy to use for mosaic. Specifying `no-data` will mosaic the most recent tile over the previous tiles, except where there are no data values.  By default `none` is used.

*--geotools-raster.nodata* _<value>_::
  Optional parameter to set `no data` values, if 1 value is giving it is applied for each band, if multiple are given then the first `totalNoDataValues`/`totalBands` are applied to the first band and so on, so each band can have multiple differing `no data` values if needed.

*--geotools-raster.pyramid*::
  If specified, build an image pyramid on ingest for quick reduced resolution query.

*--geotools-raster.separateBands*::
  If specified, separate each band into its own coverage name. By default the coverage name will have `_Bn` appended to it where `n` is the band's index.

*--geotools-raster.tileSize* _<size>_::
  The tile size of stored tiles.  Default is 256.

When the `geotools-vector` format is used, additional options are:

*--geotools-vector.cql* _<filter>_::
  A CQL filter, only data matching this filter will be ingested.

*--geotools-vector.data* _<fields>_::
  A map of date field names to the date format of the file. Use commas to separate each entry, then the first `:` character will separate the field name from the format. Use `\,` to include a comma in the format. For example: `time:MM:dd:YYYY,time2:YYYY/MM/dd hh:mm:ss` configures fields `time` and `time2` as dates with different formats.

*--geotools-vector.type* _<types>_::
  Optional parameter that specifies specific type name(s) from the source file.

When the `gpx` format is used, additional options are:

*--gpx.avro*::
  A flag to indicate whether Avro feature serialization should be used.

*--gpx.cql* _<filter>_::
  A CQL filter, only data matching this filter will be ingested.

*--gpx.typename* _<types>_::
  A comma-delimitted set of type names to ingest, feature types matching the specified type names will be ingested. By default all types will be ingested.

*--gpx.maxLength* _<degrees>_::
  Maximum extent (in both dimensions) for gpx track in degrees. Used to remove excessively long gpx tracks.

*--gpx.maxVertices* _<count>_::
  Maximum number of vertices to allow for the feature. Features with over this vertice count will be discarded.

*--gpx.minSimpVertices* _<count>_::
  Minimum vertex count to qualify for geometry simplification.

*--gpx.tolerance* _<tolerance>_::
  Maximum error tolerance in geometry simplification. Should range from 0.0 to 1.0 (i.e. .1 = 10%).  Default is 0.02.

When the `tdrive` format is used, additional options are:

*--tdrive.avro*::
  A flag to indicate whether Avro feature serialization should be used.

*--tdrive.cql* _<filter>_::
  A CQL filter, only data matching this filter will be ingested.

*--tdrive.typename* _<types>_::
  A comma-delimitted set of typen ames to ingest, feature types matching the specified type names will be ingested.  By default all types will be ingested.

*--tdrive.maxVertices* _<count>_::
  Maximum number of vertices to allow for the feature. Features with over this vertice count will be discarded.

*--tdrive.minSimpVertices* _<count>_::
  Minimum vertex count to qualify for geometry simplification.

*--tdrive.tolerance* _<tolerance>_::
  Maximum error tolerance in geometry simplification. Should range from 0.0 to 1.0 (i.e. .1 = 10%).  Default is 0.02.

When the `twitter` format is used, additional options are:

*--twitter.avro*::
  A flag to indicate whether Avro feature serialization should be used.

*--twitter.cql* _<filter>_::
  A CQL filter, only data matching this filter will be ingested.

*--twitter.typename* _<types>_::
  A comma-delimitted set of type names to ingest, feature types matching the specified type names will be ingested.  By default all types will be ingested.

*--twitter.maxVertices* _<count>_::
  Maximum number of vertices to allow for the feature. Features with over this vertice count will be discarded.

*--twitter.minSimpVertices* _<count>_::
  Minimum vertex count to qualify for geometry simplification.

*--twitter.tolerance* _<tolerance>_::
  Maximum error tolerance in geometry simplification. Should range from 0.0 to 1.0 (i.e. .1 = 10%).  Default is 0.02.

